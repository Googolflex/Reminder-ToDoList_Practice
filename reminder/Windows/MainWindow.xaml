<Window x:Class="reminder.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:local="clr-namespace:reminder"
        mc:Ignorable="d"
        Title="ToDoList" Height="450" Width="940"
        Icon="/Icons/check.ico">
    <Window.Resources>
        <Style x:Key="CustomScrollBar" TargetType="ScrollBar">
            <Setter Property="Width" Value="10"/>
            <Setter Property="Background" Value="{DynamicResource BackgroundColorForWindow}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BackgroundColorForWindow}"/>
            <Setter Property="Opacity" Value="20"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="40"/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <tb:TaskbarIcon x:Name="taskbarIcon" IconSource="/Icons/check.ico">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Close" Click="taskBar_Click">
                    </MenuItem>
                    <MenuItem Header="Show" Click="taskBar_Click"></MenuItem>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
        <Menu VerticalAlignment="Top" Grid.ColumnSpan="5" Height="20">
            <MenuItem Header="File" Background="Transparent" BorderBrush="Transparent">
                <MenuItem Header="Credits">
                    <MenuItem Header="Googolflex" Click="Credits_Click"></MenuItem>
                </MenuItem>
                <MenuItem x:Name="previousDayMenu" Header="Open previous tasks" ItemsSource="{Binding previousTasks}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Background" Value="{DynamicResource BackgroundColorForMenu}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource BackgroundColorForMenu}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ForegroundColorForMenu}"/>
                            <Setter Property="FontWeight" Value="SemiBold"/>
                            <Setter Property="Width" Value="145"/>
                            <EventSetter Event="Click" Handler="OpenPreviousDay"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <MenuItem Header="Options" >
                    <MenuItem Header="Autorun">
                        <MenuItem Header="Add to autorun" Click="AutorunOptions_Click"></MenuItem>
                        <MenuItem Header="Remove from autorun" Click="AutorunOptions_Click"></MenuItem>
                    </MenuItem>
                    <MenuItem Header="Themes">
                        <MenuItem Header="Standart" Click="SwitchTheme"></MenuItem>
                        <MenuItem Header="Light" Click="SwitchTheme"/>
                    </MenuItem>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Add" Click="AddTask_Click" Background="Transparent" BorderBrush="Transparent"></MenuItem>
            <MenuItem Header="Clear Completed" Click="ClearCompleted_Click" Background="Transparent" BorderBrush="Transparent"></MenuItem>
        </Menu>
        <ScrollViewer Grid.Row="1" Grid.RowSpan="4" Grid.ColumnSpan="5" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
            <ScrollViewer.Resources>
                <Style TargetType="ScrollBar" BasedOn="{StaticResource CustomScrollBar}" />
            </ScrollViewer.Resources>
            <ListBox x:Name="taskBox" Background="{DynamicResource BackgroundColorForWindow}" BorderBrush="{DynamicResource BackgroundColorForWindow}" ItemsSource="{Binding taskItems}" SelectionMode="Single" MouseDoubleClick="EditTask" LostFocus="taskBox_LostFocus">
            <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="0,2"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border Background="{TemplateBinding Background}"
                                BorderBrush="{DynamicResource SelectedTaskColor}"
                                BorderThickness="0"
                                CornerRadius="15">
                                        <Grid>
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0,0">
                                                <TextBlock Text="{Binding Name}" MaxWidth="200" Margin="14,0,20,0">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Foreground" Value="{DynamicResource ForegroundColorForText}"></Setter>
                                                            <Setter Property="FontSize" Value="16"/>
                                                            <Setter Property="FontWeight" Value="SemiBold"/>
                                                            <Setter Property="TextWrapping" Value="NoWrap"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                                    <Setter Property="TextWrapping" Value="Wrap"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                                <TextBlock Text="{Binding Desсription}" MaxWidth="350" Margin="0,0,20,0">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Foreground" Value="{DynamicResource ForegroundColorForText}"></Setter>
                                                            <Setter Property="FontSize" Value="16"/>
                                                            <Setter Property="FontWeight" Value="SemiBold"/>
                                                            <Setter Property="TextWrapping" Value="NoWrap"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                                    <Setter Property="TextWrapping" Value="Wrap"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                                <TextBlock Text="{Binding TimeToShow}" Style="{StaticResource onlyForTextBlocks}" Height="25" Margin="0,0,20,0"/>
                                            </StackPanel>

                                            <CheckBox Checked="TaskComplete" IsChecked="{Binding IsChecked, Mode=TwoWay}" HorizontalAlignment="Right" Width="50" Margin="0,8,0,0" Height="25" >
                                                    <CheckBox.Style>
                                                        <Style TargetType="CheckBox">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsChecked}" Value="True">
                                                                    <Setter Property="Visibility" Value="Hidden"></Setter>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </CheckBox.Style>
                                                </CheckBox>

                                                <Grid.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="Delete" Click="DeleteTask"></MenuItem>
                                                </ContextMenu>
                                            </Grid.ContextMenu>
                                        </Grid>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked}" Value="True">
                                <Setter Property="Background" Value="{DynamicResource CheckedTaskColor}"/>
                                <Setter Property="IsEnabled" Value="False"></Setter>
                            </DataTrigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{DynamicResource SelectedTaskColor}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>
        </ListBox>
        </ScrollViewer>
    </Grid>
</Window>
