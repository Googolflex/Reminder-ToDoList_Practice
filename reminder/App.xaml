<Application x:Class="reminder.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:wpfTool="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
             xmlns:local="clr-namespace:reminder"
             Startup="App_Startup"
             StartupUri="Windows/MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Themes/StandardTheme.xaml"/>
                <ResourceDictionary Source="Themes/HighlightColors.xaml"/>
                <ResourceDictionary Source="Styles/Icons.xaml"/>
                <ResourceDictionary Source="Styles/LeftMenuStyles.xaml"/>
                <ResourceDictionary Source="Styles/TasksBarStyles.xaml"/>
                <ResourceDictionary Source="Styles/AddButtonStyles.xaml"/>
                <ResourceDictionary Source="Styles/MenuButtonStyles.xaml"/>
                <ResourceDictionary Source="Styles/OrdinaryButtonsStyle.xaml"/>
                <ResourceDictionary Source="Styles/PlaceholderTextBoxStyle.xaml"/>
                <ResourceDictionary Source="Styles/TrayContextMenuStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!--Global background for windows-->
            <Style TargetType="Window">
                <Setter Property="Background" Value="{DynamicResource BackgroundColorForWindow}"/>
            </Style>

            <!--ScrollBar style-->
            <Style x:Key="CustomScrollBar" TargetType="ScrollBar">
                <Setter Property="Width" Value="10"/>
                <Setter Property="Background" Value="{DynamicResource BackgroundColorForWindow}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BackgroundColorForWindow}"/>
                <Setter Property="Opacity" Value="20"/>
            </Style>

            <!--Border style for create selected effect on left menu items-->
            <Style x:Key="SelectableBorder" TargetType="Border">
                <Setter Property="CornerRadius" Value="4"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource SelectedElementColor}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--Global labels style-->
            <Style TargetType="Label">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundColorForText}"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
            </Style>

            <!--Special textlbocks style-->
            <Style x:Key="onlyForTextBlocks" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundColorForText}"></Setter>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
            </Style>

            <!--Global time picker style. As i remember it works pretty badly-->
            <Style TargetType="wpfTool:DateTimePicker">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundColorForText}"/>
                <Setter Property="Background" Value="{DynamicResource BackgroundColorForOtherElements}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BackgroundColorForOtherElements}"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
            </Style>

            <!--Global checkbox style-->
            <Style TargetType="CheckBox" x:Key="12">
                <Setter Property="Background" Value="{DynamicResource BackgroundColorForOtherElements}"/>
                <Setter Property="Foreground" Value="{DynamicResource ForegroundColorForText}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BackgroundColorForWindow}"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
            </Style>

            <!--Global menus style. Legacy-->
            <Style TargetType="Menu">
                <Setter Property="Background" Value="{DynamicResource BackgroundColorForMenu}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BackgroundColorForMenu}"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
            </Style>

            <!--Global context menu style-->
            <!--<Style TargetType="ContextMenu" x:Key="xuy">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ContextMenu">
                            <Border BorderBrush="{DynamicResource SelectedElementColor}"
                                    Background="{StaticResource BackgroundColorForWindow}"
                                    BorderThickness="1"
                                    CornerRadius="4">
                                
                                <StackPanel Orientation="Horizontal"
                                            VerticalAlignment="Center">

                                    <TextBox MinWidth="75"
                                             VerticalAlignment="Center"
                                             Background="{StaticResource BackgroundColorForWindow}"
                                             MaxLength="30"
                                             Foreground="White"
                                             BorderThickness="0"
                                             Margin="4,0,0,0">
                                    </TextBox>

                                    <Button Tag="Add"></Button>
                                    
                                </StackPanel>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>-->

            <!--Window buttons style-->
            <Style x:Key="WinButton" TargetType="Button">
                <Setter Property="Margin" Value="0,0,15,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border BorderBrush="Transparent"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="0">
                                <ContentControl Content="{TemplateBinding Content}"
                                                VerticalAlignment="Center"
                                                FocusVisualStyle="{x:Null}"
                                                Margin="5,5,5,5"></ContentControl>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>  
                <Setter Property="Background" Value="Transparent"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource SelectedElementColor}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
        </ResourceDictionary>
    </Application.Resources>
</Application>
