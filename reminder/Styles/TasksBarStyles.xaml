<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="ListBox" x:Key="Tasks">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

    </Style>

    <Style TargetType="Border" x:Key="TaskBorder">
        
        <Setter Property="BorderBrush" Value="{DynamicResource SelectedElementColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="25,0,20,0"/>
    </Style>

    <Style TargetType="ListBoxItem" x:Key="TaskItem">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/> 
    </Style>

    <Style TargetType="DockPanel" x:Key="DockPanelForTask">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="0,5,0,5"/>
    </Style>

    <Style TargetType="CheckBox" x:Key="TaskCheckBox">

        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator>
                        <Border BorderBrush="#D9D9D9"
                                CornerRadius="15"
                                BorderThickness="1.3"
                                Width="15"
                                Height="15"
                                Background="{TemplateBinding Background}"
                                Focusable="False"></Border>
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent"/>

        <!--Trigger. Task can be completed only one time-->
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsComplete}" Value="True">
                <Setter Property="Visibility" Value="Hidden"></Setter>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SelectedElementColor}"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="TextBlock" x:Key="TasksText">

        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorForText}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>

        <!--Trigger. When task is selected its text can wrap-->
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                <Setter Property="TextWrapping" Value="Wrap"/>
            </DataTrigger>
        </Style.Triggers>

    </Style>

    <!--<ListBox x:Key="TasksBar">

        <ListBox.ItemContainerStyle>
            <Style TargetType="ListBoxItem">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0,2"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>

                        <ControlTemplate TargetType="ListBoxItem">

                            <Border Background="{TemplateBinding Background}"
                                BorderBrush="{DynamicResource SelectedElementColor}"
                                BorderThickness="0"
                                CornerRadius="4"
                                Margin="25,0,20,0">
                                <Grid>

                                    
                                    <StackPanel Orientation="Horizontal"
                                            VerticalAlignment="Center"
                                            Margin="0,0,0,0">

                                        
                                        <CheckBox Checked="TaskComplete"
                                              IsChecked="{Binding IsComplete, Mode=TwoWay}"
                                              HorizontalAlignment="Right"
                                              Width="50"
                                              Height="25">

                                            <CheckBox.Style>
                                                <Style TargetType="CheckBox">

                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="CheckBox">
                                                                <BulletDecorator>
                                                                    <Border BorderBrush="#D9D9D9"
                                                                        CornerRadius="15"
                                                                        BorderThickness="1.3"
                                                                        Width="15"
                                                                        Height="15"
                                                                        Background="{TemplateBinding Background}"></Border>
                                                                </BulletDecorator>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Background" Value="{DynamicResource BackgroundColorForWindow}"/>

                                                    
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsComplete}" Value="True">
                                                            <Setter Property="Visibility" Value="Hidden"></Setter>
                                                        </DataTrigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="{DynamicResource SelectedElementColor}"/>
                                                        </Trigger>
                                                    </Style.Triggers>

                                                </Style>
                                            </CheckBox.Style>
                                        </CheckBox>

                                        
                                        <TextBlock Text="{Binding Name}"
                                               MaxWidth="200"
                                               Margin="14,0,20,0">
                                        
                                        
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Foreground" Value="{DynamicResource ForegroundColorForText}"></Setter>
                                                    <Setter Property="FontSize" Value="16"/>
                                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                                    <Setter Property="TextWrapping" Value="NoWrap"/>

                                                    
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                            <Setter Property="TextWrapping" Value="Wrap"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>

                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                        
                                        <TextBlock Text="{Binding Desсription}"
                                               MaxWidth="350"
                                               Margin="0,0,20,0">
                                        
                                        
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Foreground" Value="{DynamicResource ForegroundColorForText}"></Setter>
                                                    <Setter Property="FontSize" Value="16"/>
                                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                                    <Setter Property="TextWrapping" Value="NoWrap"/>

                                                    
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                            <Setter Property="TextWrapping" Value="Wrap"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>

                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                        
                                        <TextBlock Text="{Binding TimeToShow}"
                                               Style="{StaticResource onlyForTextBlocks}"
                                               Height="25"
                                               Margin="0,0,20,0"/>
                                    </StackPanel>

                                    <Grid.ContextMenu>

                                        
                                        <ContextMenu>
                                            <MenuItem Header="Delete" Click="DeleteTask"></MenuItem>
                                        </ContextMenu>

                                    </Grid.ContextMenu>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    
                    <DataTrigger Binding="{Binding IsComplete}" Value="True">
                        <Setter Property="Background" Value="{DynamicResource CheckedTaskColor}"/>
                        <Setter Property="IsEnabled" Value="False"></Setter>
                    </DataTrigger>

                    
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{DynamicResource SelectedElementColor}"/>
                    </Trigger>

                </Style.Triggers>

            </Style>
        </ListBox.ItemContainerStyle>
    </ListBox>-->

</ResourceDictionary>